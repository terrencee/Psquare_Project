{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chick\\\\Downloads\\\\research papers\\\\Simple form filling application\\\\Frontend\\\\file-uploader-react-updated\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [fileType, setFileType] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    if (file) {\n      setSelectedFile(file);\n      setFileType(\"\");\n      setError(\"\");\n    }\n  };\n  const handleTypeSelection = type => {\n    if (!selectedFile) {\n      setError(\"Please upload a file first.\");\n      return;\n    }\n    const fileExtension = selectedFile.name.split(\".\").pop().toLowerCase();\n    if (fileExtension !== type) {\n      setError(\"Error: File format does not match the selected type!\");\n      return;\n    }\n    setFileType(type);\n    setError(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      marginTop: \"50px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"File Uploader\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), selectedFile && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Selected File:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 14\n        }, this), \" \", selectedFile.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Size:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 14\n        }, this), \" \", (selectedFile.size / 1024).toFixed(2), \" KB\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Detected Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 14\n        }, this), \" \", selectedFile.name.split('.').pop().toUpperCase()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Select File Type:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"center\",\n          gap: \"10px\",\n          flexWrap: \"wrap\"\n        },\n        children: [\"jpg\", \"png\", \"pdf\", \"docx\", \"txt\"].map(type => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleTypeSelection(type),\n          style: {\n            padding: \"10px\",\n            cursor: \"pointer\",\n            backgroundColor: fileType === type ? \"green\" : \"lightgray\",\n            border: \"none\",\n            borderRadius: \"5px\"\n          },\n          children: type.toUpperCase()\n        }, type, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), fileType && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          marginTop: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Selected Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 57\n        }, this), \" \", fileType.toUpperCase()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 24\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\",\n          fontWeight: \"bold\",\n          marginTop: \"10px\"\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7gfVsRAjmtovahm8F64XOq+VhZ8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","selectedFile","setSelectedFile","fileType","setFileType","error","setError","handleFileChange","event","file","target","files","handleTypeSelection","type","fileExtension","name","split","pop","toLowerCase","style","textAlign","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","size","toFixed","toUpperCase","display","justifyContent","gap","flexWrap","map","onClick","padding","cursor","backgroundColor","border","borderRadius","color","fontWeight","_c","$RefreshReg$"],"sources":["C:/Users/chick/Downloads/research papers/Simple form filling application/Frontend/file-uploader-react-updated/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction App() {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [fileType, setFileType] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const handleFileChange = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      setSelectedFile(file);\n      setFileType(\"\");\n      setError(\"\");\n    }\n  };\n\n  const handleTypeSelection = (type) => {\n    if (!selectedFile) {\n      setError(\"Please upload a file first.\");\n      return;\n    }\n\n    const fileExtension = selectedFile.name.split(\".\").pop().toLowerCase();\n    if (fileExtension !== type) {\n      setError(\"Error: File format does not match the selected type!\");\n      return;\n    }\n\n    setFileType(type);\n    setError(\"\");\n  };\n\n  return (\n    <div style={{ textAlign: \"center\", marginTop: \"50px\" }}>\n      <h2>File Uploader</h2>\n      <input type=\"file\" onChange={handleFileChange} />\n      \n      {selectedFile && (\n        <div style={{ marginTop: \"20px\" }}>\n          <p><strong>Selected File:</strong> {selectedFile.name}</p>\n          <p><strong>Size:</strong> {(selectedFile.size / 1024).toFixed(2)} KB</p>\n          <p><strong>Detected Type:</strong> {selectedFile.name.split('.').pop().toUpperCase()}</p>\n\n          <h4>Select File Type:</h4>\n          <div style={{ display: \"flex\", justifyContent: \"center\", gap: \"10px\", flexWrap: \"wrap\" }}>\n            {[\"jpg\", \"png\", \"pdf\", \"docx\", \"txt\"].map((type) => (\n              <button\n                key={type}\n                onClick={() => handleTypeSelection(type)}\n                style={{\n                  padding: \"10px\",\n                  cursor: \"pointer\",\n                  backgroundColor: fileType === type ? \"green\" : \"lightgray\",\n                  border: \"none\",\n                  borderRadius: \"5px\",\n                }}\n              >\n                {type.toUpperCase()}\n              </button>\n            ))}\n          </div>\n\n          {fileType && <p style={{ marginTop: \"10px\" }}><strong>Selected Type:</strong> {fileType.toUpperCase()}</p>}\n          {error && <p style={{ color: \"red\", fontWeight: \"bold\", marginTop: \"10px\" }}>{error}</p>}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMW,gBAAgB,GAAIC,KAAK,IAAK;IAClC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClC,IAAIF,IAAI,EAAE;MACRP,eAAe,CAACO,IAAI,CAAC;MACrBL,WAAW,CAAC,EAAE,CAAC;MACfE,QAAQ,CAAC,EAAE,CAAC;IACd;EACF,CAAC;EAED,MAAMM,mBAAmB,GAAIC,IAAI,IAAK;IACpC,IAAI,CAACZ,YAAY,EAAE;MACjBK,QAAQ,CAAC,6BAA6B,CAAC;MACvC;IACF;IAEA,MAAMQ,aAAa,GAAGb,YAAY,CAACc,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;IACtE,IAAIJ,aAAa,KAAKD,IAAI,EAAE;MAC1BP,QAAQ,CAAC,sDAAsD,CAAC;MAChE;IACF;IAEAF,WAAW,CAACS,IAAI,CAAC;IACjBP,QAAQ,CAAC,EAAE,CAAC;EACd,CAAC;EAED,oBACER,OAAA;IAAKqB,KAAK,EAAE;MAAEC,SAAS,EAAE,QAAQ;MAAEC,SAAS,EAAE;IAAO,CAAE;IAAAC,QAAA,gBACrDxB,OAAA;MAAAwB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtB5B,OAAA;MAAOe,IAAI,EAAC,MAAM;MAACc,QAAQ,EAAEpB;IAAiB;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAEhDzB,YAAY,iBACXH,OAAA;MAAKqB,KAAK,EAAE;QAAEE,SAAS,EAAE;MAAO,CAAE;MAAAC,QAAA,gBAChCxB,OAAA;QAAAwB,QAAA,gBAAGxB,OAAA;UAAAwB,QAAA,EAAQ;QAAc;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACzB,YAAY,CAACc,IAAI;MAAA;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1D5B,OAAA;QAAAwB,QAAA,gBAAGxB,OAAA;UAAAwB,QAAA,EAAQ;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAAC,CAACzB,YAAY,CAAC2B,IAAI,GAAG,IAAI,EAAEC,OAAO,CAAC,CAAC,CAAC,EAAC,KAAG;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACxE5B,OAAA;QAAAwB,QAAA,gBAAGxB,OAAA;UAAAwB,QAAA,EAAQ;QAAc;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACzB,YAAY,CAACc,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,CAAC,CAACa,WAAW,CAAC,CAAC;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAEzF5B,OAAA;QAAAwB,QAAA,EAAI;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1B5B,OAAA;QAAKqB,KAAK,EAAE;UAAEY,OAAO,EAAE,MAAM;UAAEC,cAAc,EAAE,QAAQ;UAAEC,GAAG,EAAE,MAAM;UAAEC,QAAQ,EAAE;QAAO,CAAE;QAAAZ,QAAA,EACtF,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,CAAC,CAACa,GAAG,CAAEtB,IAAI,iBAC7Cf,OAAA;UAEEsC,OAAO,EAAEA,CAAA,KAAMxB,mBAAmB,CAACC,IAAI,CAAE;UACzCM,KAAK,EAAE;YACLkB,OAAO,EAAE,MAAM;YACfC,MAAM,EAAE,SAAS;YACjBC,eAAe,EAAEpC,QAAQ,KAAKU,IAAI,GAAG,OAAO,GAAG,WAAW;YAC1D2B,MAAM,EAAE,MAAM;YACdC,YAAY,EAAE;UAChB,CAAE;UAAAnB,QAAA,EAEDT,IAAI,CAACiB,WAAW,CAAC;QAAC,GAVdjB,IAAI;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAWH,CACT;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,EAELvB,QAAQ,iBAAIL,OAAA;QAAGqB,KAAK,EAAE;UAAEE,SAAS,EAAE;QAAO,CAAE;QAAAC,QAAA,gBAACxB,OAAA;UAAAwB,QAAA,EAAQ;QAAc;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACvB,QAAQ,CAAC2B,WAAW,CAAC,CAAC;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACzGrB,KAAK,iBAAIP,OAAA;QAAGqB,KAAK,EAAE;UAAEuB,KAAK,EAAE,KAAK;UAAEC,UAAU,EAAE,MAAM;UAAEtB,SAAS,EAAE;QAAO,CAAE;QAAAC,QAAA,EAAEjB;MAAK;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrF,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC1B,EAAA,CAlEQD,GAAG;AAAA6C,EAAA,GAAH7C,GAAG;AAoEZ,eAAeA,GAAG;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}